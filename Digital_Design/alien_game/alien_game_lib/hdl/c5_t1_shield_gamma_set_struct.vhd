-- VHDL Entity alien_game_lib.c5_t1_Shield_gamma_set.symbol
--
-- Created:
--          by - roope.UNKNOWN (ROOPE-PC)
--          at - 19:43:52 21.11.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c5_t1_Shield_gamma_set IS
   PORT( 
      clk      : IN     std_logic;
      rst_n    : IN     std_logic;
      rx_rdy   : IN     std_logic;
      bit_out  : OUT    std_logic;
      lat      : OUT    std_logic;
      sb       : OUT    std_logic;
      transmit : OUT    std_logic
   );

-- Declarations

END c5_t1_Shield_gamma_set ;

--
-- VHDL Architecture alien_game_lib.c5_t1_Shield_gamma_set.struct
--
-- Created:
--          by - roope.UNKNOWN (ROOPE-PC)
--          at - 19:43:52 21.11.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c5_t1_Shield_gamma_set IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL carry_out  : std_logic;
   SIGNAL dout       : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout10     : std_logic;
   SIGNAL dout12     : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout13     : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout2      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout3      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout4      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout5      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout6      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout7      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout8      : std_logic_vector(1 DOWNTO 0);
   SIGNAL dout9      : std_logic_vector(7 DOWNTO 0);
   SIGNAL increment  : std_logic;
   SIGNAL increment1 : std_logic;
   SIGNAL next_value : std_logic;
   SIGNAL val_out    : std_logic_vector(7 DOWNTO 0);
   SIGNAL val_out1   : std_logic_vector(7 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL sb_internal : std_logic;


   -- Component Declarations
   COMPONENT c5_t1_counter
   PORT (
      clk       : IN     std_logic ;
      increment : IN     std_logic ;
      max_val   : IN     std_logic_vector (7 DOWNTO 0);
      min_val   : IN     std_logic_vector (7 DOWNTO 0);
      rst_n     : IN     std_logic ;
      carry_out : OUT    std_logic ;
      val_out   : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c5_t1_gamma_controller
   PORT (
      clk        : IN     std_logic ;
      datat_sent : IN     std_logic ;
      rst        : IN     std_logic ;
      rx_rdy     : IN     std_logic ;
      lat        : OUT    std_logic ;
      next_value : OUT    std_logic ;
      sb         : OUT    std_logic ;
      transmit   : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c5_t1_counter USE ENTITY alien_game_lib.c5_t1_counter;
   FOR ALL : c5_t1_gamma_controller USE ENTITY alien_game_lib.c5_t1_gamma_controller;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_6' of 'and'
   dout7 <= val_out AND dout6;

   -- ModuleWare code(v1.12) for instance 'U_9' of 'and'
   bit_out <= NOT(sb_internal) AND dout10;

   -- ModuleWare code(v1.12) for instance 'BLUE' of 'constval'
   dout3 <= "00110111";

   -- ModuleWare code(v1.12) for instance 'GREEN' of 'constval'
   dout4 <= "00111111";

   -- ModuleWare code(v1.12) for instance 'RED' of 'constval'
   dout5 <= "00011100";

   -- ModuleWare code(v1.12) for instance 'max_00000100' of 'constval'
   dout9 <= "00000100";

   -- ModuleWare code(v1.12) for instance 'max_00100000' of 'constval'
   dout1 <= "00100000";

   -- ModuleWare code(v1.12) for instance 'max_10000000' of 'constval'
   dout13 <= "10000000";

   -- ModuleWare code(v1.12) for instance 'min_00000001' of 'constval'
   dout <= "00000001";

   -- ModuleWare code(v1.12) for instance 'min_00000001_2' of 'constval'
   dout2 <= "00000001";

   -- ModuleWare code(v1.12) for instance 'min_00000001_3' of 'constval'
   dout12 <= "00000001";

   -- ModuleWare code(v1.12) for instance 'U_3' of 'merge'
   dout8 <= val_out1(2) & val_out1(1);

   -- ModuleWare code(v1.12) for instance 'U_0' of 'mux'
   u_0combo_proc: PROCESS(dout3, dout4, dout5, dout8)
   BEGIN
      CASE dout8 IS
      WHEN "00" => dout6 <= dout3;
      WHEN "01" => dout6 <= dout4;
      WHEN "10" => dout6 <= dout5;
      WHEN OTHERS => dout6 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_0combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_7' of 'tor'
   dout10 <= dout7(0) OR dout7(1) OR dout7(2) OR dout7(3) OR dout7(4)
             OR dout7(5) OR dout7(6) OR dout7(7);

   -- Instance port mappings.
   U_1 : c5_t1_counter
      PORT MAP (
         clk       => clk,
         increment => next_value,
         max_val   => dout1,
         min_val   => dout,
         rst_n     => rst_n,
         carry_out => increment,
         val_out   => val_out
      );
   U_2 : c5_t1_counter
      PORT MAP (
         clk       => clk,
         increment => increment,
         max_val   => dout9,
         min_val   => dout2,
         rst_n     => rst_n,
         carry_out => increment1,
         val_out   => val_out1
      );
   U_5 : c5_t1_counter
      PORT MAP (
         clk       => clk,
         increment => increment1,
         max_val   => dout13,
         min_val   => dout12,
         rst_n     => rst_n,
         carry_out => carry_out,
         val_out   => OPEN
      );
   U_8 : c5_t1_gamma_controller
      PORT MAP (
         clk        => clk,
         datat_sent => carry_out,
         rst        => rst_n,
         rx_rdy     => rx_rdy,
         lat        => lat,
         next_value => next_value,
         sb         => sb_internal,
         transmit   => transmit
      );

   -- Implicit buffered output assignments
   sb <= sb_internal;

END struct;
