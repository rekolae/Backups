-- VHDL Entity alien_game_lib.game_logic.symbol
--
-- Created:
--          by - roope.UNKNOWN (ROOPE-PC)
--          at - 17:57:31 21.11.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY game_logic IS
   PORT( 
      btn         : IN     std_logic_vector (3 DOWNTO 0);
      clk         : IN     std_logic;
      rst_n       : IN     std_logic;
      write_ready : IN     std_logic;
      BGR_color   : OUT    std_logic_vector (23 DOWNTO 0);
      frame_done  : OUT    std_logic;
      write       : OUT    std_logic;
      x_coord     : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord     : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END game_logic ;

--
-- VHDL Architecture alien_game_lib.game_logic.struct
--
-- Created:
--          by - roope.UNKNOWN (ROOPE-PC)
--          at - 17:57:31 21.11.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF game_logic IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Alien_color    : std_logic_vector(23 DOWNTO 0);
   SIGNAL X_coordinate   : std_logic_vector(7 DOWNTO 0);
   SIGNAL Y_coordinate   : std_logic_vector(7 DOWNTO 0);
   SIGNAL alien_defeated : std_logic;
   SIGNAL bullet_x_coord : std_logic_vector(7 DOWNTO 0);
   SIGNAL bullet_y_coord : std_logic_vector(7 DOWNTO 0);
   SIGNAL color          : std_logic_vector(23 DOWNTO 0);
   SIGNAL color1         : std_logic_vector(23 DOWNTO 0);
   SIGNAL din3           : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout3          : std_logic;
   SIGNAL enable         : std_logic;
   SIGNAL gun_color      : std_logic_vector(23 DOWNTO 0);
   SIGNAL gun_px_idx     : std_logic_vector(1 DOWNTO 0);
   SIGNAL hit            : std_logic;
   SIGNAL module_select  : std_logic_vector(1 DOWNTO 0);
   SIGNAL x_coord1       : std_logic_vector(7 DOWNTO 0);
   SIGNAL x_coordinate1  : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coordinate1  : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT c2_t7_basic_alien
   PORT (
      clk            : IN     std_logic ;
      enable         : IN     std_logic ;
      hit            : IN     std_logic ;
      rst_n          : IN     std_logic ;
      Alien_color    : OUT    std_logic_vector (23 DOWNTO 0);
      X_coordinate   : OUT    std_logic_vector (7 DOWNTO 0);
      Y_coordinate   : OUT    std_logic_vector (7 DOWNTO 0);
      alien_defeated : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c3_t1_gun_module
   PORT (
      btn          : IN     std_logic_vector (3 DOWNTO 0);
      clk          : IN     std_logic ;
      enable       : IN     std_logic ;
      gun_px_idx   : IN     std_logic_vector (1 DOWNTO 0);
      rst_n        : IN     std_logic ;
      gun_color    : OUT    std_logic_vector (23 DOWNTO 0);
      x_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      y_coordinate : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c3_t2_write_sequencer
   PORT (
      alien_defeated : IN     std_logic ;
      bypass         : IN     std_logic ;
      clk            : IN     std_logic ;
      rst_n          : IN     std_logic ;
      write_ready    : IN     std_logic ;
      enable         : OUT    std_logic ;
      frame_done     : OUT    std_logic ;
      gun_px_idx     : OUT    std_logic_vector (1 DOWNTO 0);
      module_select  : OUT    std_logic_vector (1 DOWNTO 0);
      write          : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c3_t4_bullet_flight_modelling_v2
   PORT (
      btn            : IN     std_logic ;
      clk            : IN     std_logic ;
      enable         : IN     std_logic ;
      gun_x_coord    : IN     std_logic_vector (7 DOWNTO 0);
      rst_n          : IN     std_logic ;
      bullet_x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      bullet_y_coord : OUT    std_logic_vector (7 DOWNTO 0);
      color          : OUT    std_logic_vector (23 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c4_t1_hit_detector
   PORT (
      alien_x_coord  : IN     std_logic_vector (7 DOWNTO 0);
      alien_y_coord  : IN     std_logic_vector (7 DOWNTO 0);
      bullet_x_coord : IN     std_logic_vector (7 DOWNTO 0);
      bullet_y_coord : IN     std_logic_vector (7 DOWNTO 0);
      clk            : IN     std_logic ;
      rst_n          : IN     std_ulogic ;
      hit            : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c4_t2_victory_effect_v3
   PORT (
      clk     : IN     std_logic ;
      rst     : IN     std_logic ;
      color   : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t7_basic_alien USE ENTITY alien_game_lib.c2_t7_basic_alien;
   FOR ALL : c3_t1_gun_module USE ENTITY alien_game_lib.c3_t1_gun_module;
   FOR ALL : c3_t2_write_sequencer USE ENTITY alien_game_lib.c3_t2_write_sequencer;
   FOR ALL : c3_t4_bullet_flight_modelling_v2 USE ENTITY alien_game_lib.c3_t4_bullet_flight_modelling_v2;
   FOR ALL : c4_t1_hit_detector USE ENTITY alien_game_lib.c4_t1_hit_detector;
   FOR ALL : c4_t2_victory_effect_v3 USE ENTITY alien_game_lib.c4_t2_victory_effect_v3;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   dout3 <= '0';

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(Alien_color, gun_color, color, color1, 
                          module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => BGR_color <= Alien_color;
      WHEN "01" => BGR_color <= gun_color;
      WHEN "10" => BGR_color <= color;
      WHEN "11" => BGR_color <= color1;
      WHEN OTHERS => BGR_color <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'mux'
   u_5combo_proc: PROCESS(Y_coordinate, y_coordinate1, bullet_y_coord, 
                          din3, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => y_coord <= Y_coordinate;
      WHEN "01" => y_coord <= y_coordinate1;
      WHEN "10" => y_coord <= bullet_y_coord;
      WHEN "11" => y_coord <= din3;
      WHEN OTHERS => y_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_5combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'mux'
   u_6combo_proc: PROCESS(X_coordinate, x_coordinate1, bullet_x_coord, 
                          x_coord1, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => x_coord <= X_coordinate;
      WHEN "01" => x_coord <= x_coordinate1;
      WHEN "10" => x_coord <= bullet_x_coord;
      WHEN "11" => x_coord <= x_coord1;
      WHEN OTHERS => x_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_6combo_proc;

   -- Instance port mappings.
   U_3 : c2_t7_basic_alien
      PORT MAP (
         clk            => clk,
         enable         => enable,
         hit            => hit,
         rst_n          => rst_n,
         Alien_color    => Alien_color,
         X_coordinate   => X_coordinate,
         Y_coordinate   => Y_coordinate,
         alien_defeated => alien_defeated
      );
   U_1 : c3_t1_gun_module
      PORT MAP (
         btn          => btn,
         clk          => clk,
         enable       => enable,
         gun_px_idx   => gun_px_idx,
         rst_n        => rst_n,
         gun_color    => gun_color,
         x_coordinate => x_coordinate1,
         y_coordinate => y_coordinate1
      );
   U_2 : c3_t2_write_sequencer
      PORT MAP (
         alien_defeated => alien_defeated,
         bypass         => dout3,
         clk            => clk,
         rst_n          => rst_n,
         write_ready    => write_ready,
         enable         => enable,
         frame_done     => frame_done,
         gun_px_idx     => gun_px_idx,
         module_select  => module_select,
         write          => write
      );
   U_8 : c3_t4_bullet_flight_modelling_v2
      PORT MAP (
         btn            => btn(2),
         clk            => clk,
         enable         => enable,
         gun_x_coord    => x_coordinate1,
         rst_n          => rst_n,
         bullet_x_coord => bullet_x_coord,
         bullet_y_coord => bullet_y_coord,
         color          => color
      );
   U_10 : c4_t1_hit_detector
      PORT MAP (
         alien_x_coord  => X_coordinate,
         alien_y_coord  => Y_coordinate,
         bullet_x_coord => bullet_x_coord,
         bullet_y_coord => bullet_y_coord,
         clk            => clk,
         rst_n          => rst_n,
         hit            => hit
      );
   U_7 : c4_t2_victory_effect_v3
      PORT MAP (
         clk     => clk,
         rst     => rst_n,
         color   => color1,
         x_coord => x_coord1,
         y_coord => din3
      );

END struct;
