-- VHDL Entity alien_game_lib.c3_t1_gun_x_coord_controller.symbol
--
-- Created:
--          by - rekolae.UNKNOWN (HTC219-704-SPC)
--          at - 10:24:47 24.10.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c3_t1_gun_x_coord_controller IS
   PORT( 
      btn     : IN     std_logic_vector (3 DOWNTO 0);
      clk     : IN     std_logic;
      enable  : IN     std_logic;
      rst_n   : IN     std_logic;
      x_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c3_t1_gun_x_coord_controller ;

--
-- VHDL Architecture alien_game_lib.c3_t1_gun_x_coord_controller.struct
--
-- Created:
--          by - rekolae.UNKNOWN (HTC219-704-SPC)
--          at - 10:24:47 24.10.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c3_t1_gun_x_coord_controller IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL and_l_to_merge : std_logic;
   SIGNAL and_r_to_merge : std_logic;
   SIGNAL data_out       : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_out1      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout           : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1          : std_logic_vector(1 DOWNTO 0);
   SIGNAL dout2          : std_logic;
   SIGNAL dout3          : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL x_coord_internal : std_logic_vector (7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'gun_x_coord' of 'adff'
   SIGNAL mw_gun_x_coordreg_cval : std_logic_vector(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT c2_t3_left_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t4_right_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t3_left_shifter USE ENTITY alien_game_lib.c2_t3_left_shifter;
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'gun_x_coord' of 'adff'
   x_coord_internal <= mw_gun_x_coordreg_cval;
   gun_x_coordseq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_gun_x_coordreg_cval <= "00010000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_gun_x_coordreg_cval <= dout;
      END IF;
   END PROCESS gun_x_coordseq_proc;

   -- ModuleWare code(v1.12) for instance 'U_0' of 'and'
   dout2 <= btn(1) AND enable;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'and'
   dout3 <= enable AND btn(3);

   -- ModuleWare code(v1.12) for instance 'and_L' of 'and'
   and_l_to_merge <= dout3 AND NOT(x_coord_internal(1));

   -- ModuleWare code(v1.12) for instance 'and_r' of 'and'
   and_r_to_merge <= NOT(x_coord_internal(6)) AND dout2;

   -- ModuleWare code(v1.12) for instance 'U_10' of 'merge'
   dout1 <= and_l_to_merge & and_r_to_merge;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'mux'
   u_3combo_proc: PROCESS(x_coord_internal, data_out, data_out1, dout1)
   BEGIN
      CASE dout1 IS
      WHEN "00" => dout <= x_coord_internal;
      WHEN "01" => dout <= data_out;
      WHEN "10" => dout <= data_out1;
      WHEN OTHERS => dout <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_3combo_proc;

   -- Instance port mappings.
   U_1 : c2_t3_left_shifter
      PORT MAP (
         data_in  => x_coord_internal,
         data_out => data_out
      );
   U_2 : c2_t4_right_shifter
      PORT MAP (
         data_in  => x_coord_internal,
         data_out => data_out1
      );

   -- Implicit buffered output assignments
   x_coord <= x_coord_internal;

END struct;
